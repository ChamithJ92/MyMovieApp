# This is a basic workflow

name: Android Build

on: 
  # triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Action tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 # This workflow contains a single job called "build"
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Run Lint
        run: echo Run Lint

#      - name: Upload html test report
#        uses: actions/upload-artifact@v1
#        with:
#          name: lint.html
#          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Run tests
        run: echo Run tests

#      - name: Upload test report
#        uses: actions/upload-artifact@v1
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/

  static-code-analysis:
    needs: [ unit-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: SonarCloud Scan
        run: ./gradlew app:sonarqube -Dsonar.loin=${{ secrets.SONAR_TOKEN}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Gradle packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build sonar --info


#  instrumentation-test:
#    needs: [ unit-test ]
#    runs-on: macos-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v1
#
#      - name: Run espresso tests
#        uses: reactivecircus/android-emulator-runner@v1
#        with:
#          api-level: 29
#          script: ./gradlew connectedCheck
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v1
#        with:
#          name: instrumentation_test_report
#          path: app/build/reports/androidTests/connected/


